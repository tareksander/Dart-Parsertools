[{"name":"lexer_builder_runtime","qualifiedName":"lexer_builder_runtime","href":"lexer_builder_runtime/lexer_builder_runtime-library.html","type":"library","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Types needed at runtime by lexers generated by lexer_builder.\nSee the lexer_builder example for information on how to use generated lexers, and the documentation for the classes here."},{"name":"Lexer","qualifiedName":"lexer_builder_runtime.Lexer","href":"lexer_builder_runtime/Lexer-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Marker annotation for a lexer class.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"Lexer","qualifiedName":"lexer_builder_runtime.Lexer.Lexer","href":"lexer_builder_runtime/Lexer/Lexer.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Annotates a lexer class.\nstartState sets the starting state for the lexer, defaulting to 0.","enclosedBy":{"name":"Lexer","type":"class","href":"lexer_builder_runtime/Lexer-class.html"}},{"name":"startState","qualifiedName":"lexer_builder_runtime.Lexer.startState","href":"lexer_builder_runtime/Lexer/startState.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The state the lexer will start in.","enclosedBy":{"name":"Lexer","type":"class","href":"lexer_builder_runtime/Lexer-class.html"}},{"name":"LexerBase","qualifiedName":"lexer_builder_runtime.LexerBase","href":"lexer_builder_runtime/LexerBase-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Base class for generated lexers.\nThe lexer gets a List of rule lists, ordered by priority.\nThe highest priority rule that matches is chosen, if only one in the list matches.\nIf multiple rules in a list match, the longest match is used.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"LexerBase","qualifiedName":"lexer_builder_runtime.LexerBase.LexerBase","href":"lexer_builder_runtime/LexerBase/LexerBase.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Constructs a lexer with the start state.\nYou have to initialize rules yourself in your constructor.","enclosedBy":{"name":"LexerBase","type":"class","href":"lexer_builder_runtime/LexerBase-class.html"}},{"name":"rules","qualifiedName":"lexer_builder_runtime.LexerBase.rules","href":"lexer_builder_runtime/LexerBase/rules.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"List of rule lists, already sorted by descending priority.","enclosedBy":{"name":"LexerBase","type":"class","href":"lexer_builder_runtime/LexerBase-class.html"}},{"name":"state","qualifiedName":"lexer_builder_runtime.LexerBase.state","href":"lexer_builder_runtime/LexerBase/state.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The current state.","enclosedBy":{"name":"LexerBase","type":"class","href":"lexer_builder_runtime/LexerBase-class.html"}},{"name":"tokenize","qualifiedName":"lexer_builder_runtime.LexerBase.tokenize","href":"lexer_builder_runtime/LexerBase/tokenize.html","type":"method","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Tokenizes a String according to the rules.","enclosedBy":{"name":"LexerBase","type":"class","href":"lexer_builder_runtime/LexerBase-class.html"}},{"name":"LexerException","qualifiedName":"lexer_builder_runtime.LexerException","href":"lexer_builder_runtime/LexerException-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Base class for Lexer exceptions.\nIf you throw exceptions in the rules, you should use a subclass of this.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"LexerException","qualifiedName":"lexer_builder_runtime.LexerException.LexerException","href":"lexer_builder_runtime/LexerException/LexerException.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"","enclosedBy":{"name":"LexerException","type":"class","href":"lexer_builder_runtime/LexerException-class.html"}},{"name":"LexerNoMatchException","qualifiedName":"lexer_builder_runtime.LexerNoMatchException","href":"lexer_builder_runtime/LexerNoMatchException-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"No rule matched for the string starting at index.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"LexerNoMatchException","qualifiedName":"lexer_builder_runtime.LexerNoMatchException.LexerNoMatchException","href":"lexer_builder_runtime/LexerNoMatchException/LexerNoMatchException.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"","enclosedBy":{"name":"LexerNoMatchException","type":"class","href":"lexer_builder_runtime/LexerNoMatchException-class.html"}},{"name":"char","qualifiedName":"lexer_builder_runtime.LexerNoMatchException.char","href":"lexer_builder_runtime/LexerNoMatchException/char.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The character in the line of index.","enclosedBy":{"name":"LexerNoMatchException","type":"class","href":"lexer_builder_runtime/LexerNoMatchException-class.html"}},{"name":"index","qualifiedName":"lexer_builder_runtime.LexerNoMatchException.index","href":"lexer_builder_runtime/LexerNoMatchException/index.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The index in the input where no match could be found.","enclosedBy":{"name":"LexerNoMatchException","type":"class","href":"lexer_builder_runtime/LexerNoMatchException-class.html"}},{"name":"line","qualifiedName":"lexer_builder_runtime.LexerNoMatchException.line","href":"lexer_builder_runtime/LexerNoMatchException/line.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The line of index.","enclosedBy":{"name":"LexerNoMatchException","type":"class","href":"lexer_builder_runtime/LexerNoMatchException-class.html"}},{"name":"toString","qualifiedName":"lexer_builder_runtime.LexerNoMatchException.toString","href":"lexer_builder_runtime/LexerNoMatchException/toString.html","type":"method","overriddenDepth":1,"packageName":"lexer_builder_runtime","desc":"A string representation of this object.","enclosedBy":{"name":"LexerNoMatchException","type":"class","href":"lexer_builder_runtime/LexerNoMatchException-class.html"}},{"name":"LexerRule","qualifiedName":"lexer_builder_runtime.LexerRule","href":"lexer_builder_runtime/LexerRule-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Rule representation used internally by the generated code.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"LexerRule","qualifiedName":"lexer_builder_runtime.LexerRule.LexerRule","href":"lexer_builder_runtime/LexerRule/LexerRule.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Constructs a lexer rule.","enclosedBy":{"name":"LexerRule","type":"class","href":"lexer_builder_runtime/LexerRule-class.html"}},{"name":"action","qualifiedName":"lexer_builder_runtime.LexerRule.action","href":"lexer_builder_runtime/LexerRule/action.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The action to call if matched.","enclosedBy":{"name":"LexerRule","type":"class","href":"lexer_builder_runtime/LexerRule-class.html"}},{"name":"pattern","qualifiedName":"lexer_builder_runtime.LexerRule.pattern","href":"lexer_builder_runtime/LexerRule/pattern.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The pattern to match.","enclosedBy":{"name":"LexerRule","type":"class","href":"lexer_builder_runtime/LexerRule-class.html"}},{"name":"state","qualifiedName":"lexer_builder_runtime.LexerRule.state","href":"lexer_builder_runtime/LexerRule/state.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The state in which the rule can be triggered.","enclosedBy":{"name":"LexerRule","type":"class","href":"lexer_builder_runtime/LexerRule-class.html"}},{"name":"Rule","qualifiedName":"lexer_builder_runtime.Rule","href":"lexer_builder_runtime/Rule-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Annotation for a lexer rule.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"Rule","qualifiedName":"lexer_builder_runtime.Rule.Rule","href":"lexer_builder_runtime/Rule/Rule.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Constructs a lexer rule annotation.\nSee pattern, priority and state for information.","enclosedBy":{"name":"Rule","type":"class","href":"lexer_builder_runtime/Rule-class.html"}},{"name":"pattern","qualifiedName":"lexer_builder_runtime.Rule.pattern","href":"lexer_builder_runtime/Rule/pattern.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"A pattern string for matching the rule. This pattern will be used to create a RegExp, so uses JavaScript regular expression syntax.","enclosedBy":{"name":"Rule","type":"class","href":"lexer_builder_runtime/Rule-class.html"}},{"name":"priority","qualifiedName":"lexer_builder_runtime.Rule.priority","href":"lexer_builder_runtime/Rule/priority.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The priority for matching this rule, a higher number means higher priority.\nThe highest priority rule is used that has a match.\nFor rules with the same priority, the longest match is used.","enclosedBy":{"name":"Rule","type":"class","href":"lexer_builder_runtime/Rule-class.html"}},{"name":"state","qualifiedName":"lexer_builder_runtime.Rule.state","href":"lexer_builder_runtime/Rule/state.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The state in which this rule will be matched.\nnull means the rule will be considered for every state.","enclosedBy":{"name":"Rule","type":"class","href":"lexer_builder_runtime/Rule-class.html"}},{"name":"Token","qualifiedName":"lexer_builder_runtime.Token","href":"lexer_builder_runtime/Token-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Base class for all Tokens.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"Token","qualifiedName":"lexer_builder_runtime.Token.Token","href":"lexer_builder_runtime/Token/Token.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"","enclosedBy":{"name":"Token","type":"class","href":"lexer_builder_runtime/Token-class.html"}},{"name":"TokenResponse","qualifiedName":"lexer_builder_runtime.TokenResponse","href":"lexer_builder_runtime/TokenResponse-class.html","type":"class","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Return type for rule methods.\nUse the constructors to affect the behaviour of the lexer.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"TokenResponse.accept","qualifiedName":"lexer_builder_runtime.TokenResponse.accept","href":"lexer_builder_runtime/TokenResponse/TokenResponse.accept.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Accept the match and optionally return a token.","enclosedBy":{"name":"TokenResponse","type":"class","href":"lexer_builder_runtime/TokenResponse-class.html"}},{"name":"TokenResponse.reject","qualifiedName":"lexer_builder_runtime.TokenResponse.reject","href":"lexer_builder_runtime/TokenResponse/TokenResponse.reject.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"Reject the match and let another rule match.","enclosedBy":{"name":"TokenResponse","type":"class","href":"lexer_builder_runtime/TokenResponse-class.html"}},{"name":"token","qualifiedName":"lexer_builder_runtime.TokenResponse.token","href":"lexer_builder_runtime/TokenResponse/token.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The token returned by the action, if any.","enclosedBy":{"name":"TokenResponse","type":"class","href":"lexer_builder_runtime/TokenResponse-class.html"}},{"name":"type","qualifiedName":"lexer_builder_runtime.TokenResponse.type","href":"lexer_builder_runtime/TokenResponse/type.html","type":"property","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"See TokenResponseType.","enclosedBy":{"name":"TokenResponse","type":"class","href":"lexer_builder_runtime/TokenResponse-class.html"}},{"name":"TokenResponseType","qualifiedName":"lexer_builder_runtime.TokenResponseType","href":"lexer_builder_runtime/TokenResponseType.html","type":"enum","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"The kinds of token responses.","enclosedBy":{"name":"lexer_builder_runtime","type":"library","href":"lexer_builder_runtime/lexer_builder_runtime-library.html"}},{"name":"TokenResponseType","qualifiedName":"lexer_builder_runtime.TokenResponseType.TokenResponseType","href":"lexer_builder_runtime/TokenResponseType/TokenResponseType.html","type":"constructor","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"","enclosedBy":{"name":"TokenResponseType","type":"enum","href":"lexer_builder_runtime/TokenResponseType.html"}},{"name":"values","qualifiedName":"lexer_builder_runtime.TokenResponseType.values","href":"lexer_builder_runtime/TokenResponseType/values-constant.html","type":"constant","overriddenDepth":0,"packageName":"lexer_builder_runtime","desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"TokenResponseType","type":"enum","href":"lexer_builder_runtime/TokenResponseType.html"}}]
